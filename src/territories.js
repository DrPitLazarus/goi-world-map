export default function initTerritories(scale, group, writeMessage) {
    for (let node in data) {
        let nodeLine = new Konva.Line({
            points: data[node].boundaries.map(val => val * scale),
            fill: '#034f7d',
            closed: true,
            opacity: 0.5
        });
        let nodeCaptiol = new Konva.Circle({
            x: data[node].capitol[0] * scale,
            y: data[node].capitol[1] * scale,
            radius: 6,
            fill: 'white'
        });
        group.add(nodeLine);
        group.add(nodeCaptiol);
        if (data[node].contested) {
            let { attacker, attackerGoal, attackerProgress, defender, defenderGoal, defenderProgress } = data[node].contested;
            let nodeBattle = new Konva.Group({
                x: data[node].capitol[0],
                y: data[node].capitol[1],
                offsetX: 30,
                offsetY: 75
            });
            let nodeBattleBase = new Konva.Line({
                points: [0, 0, 60, 0, 60, 50, 30, 70, 0, 50],
                fill: 'black',
                closed: true
            });
            let nodeBattleAttacker = new Konva.Rect({
                x: 5,
                y: 5,
                width: 50 * (attackerProgress/attackerGoal),
                height: 6,
                fill: '#370904'
            });
            let nodeBattleDefender = new Konva.Rect({
                x: 5,
                y: 13,
                width: 50 * (defenderProgress/defenderGoal),
                height: 6,
                fill: '#034f7d'
            });
            nodeBattle.add(nodeBattleBase);
            nodeBattle.add(nodeBattleAttacker);
            nodeBattle.add(nodeBattleDefender);
            group.add(nodeBattle);
        }
        nodeLine.on('mouseover', function () {
            let msg = data[node].name;
            if (data[node].contested) {
                let { attacker, attackerGoal, attackerProgress, defender, defenderGoal, defenderProgress } = data[node].contested;
                msg += `\n
Attacker: ${attacker}\r
Progress: ${attackerProgress}/${attackerGoal}(${Math.round(attackerProgress/attackerGoal*100)}%)\n
Defender: ${defender}\r
Progress: ${defenderProgress}/${defenderGoal}(${Math.round(defenderProgress/defenderGoal*100)}%)
`
            }
            writeMessage(msg);
        });
    }
}

export const data = {
    'tamblair': {
        boundaries: [283, 415, 272, 412, 266, 414, 261, 409, 255, 408, 239, 398, 231, 395, 220, 403, 209, 413, 204, 419, 196, 423, 188, 428, 183, 435, 183, 442, 180, 449, 180, 458, 181, 465, 186, 471, 183, 478, 185, 488, 187, 499, 190, 509, 195, 517, 202, 511, 210, 508, 219, 515, 229, 518, 237, 528, 238, 541, 233, 548, 224, 553, 219, 557, 214, 561, 213, 566, 208, 568, 206, 575, 206, 583, 211, 589, 211, 606, 218, 611, 224, 611, 229, 609, 237, 615, 245, 618, 254, 613, 261, 618, 264, 615, 274, 613, 283, 613, 287, 604, 294, 603, 295, 599, 290, 592, 295, 587, 294, 580, 298, 574, 292, 567, 288, 568, 281, 564, 282, 560, 282, 557, 289, 560, 291, 558, 291, 553, 293, 549, 288, 544, 285, 542, 281, 539, 282, 534, 287, 530, 292, 526, 289, 523, 284, 522, 288, 515, 284, 506, 275, 504, 267, 503, 263, 493, 265, 482, 267, 470, 266, 461, 265, 456, 269, 452, 276, 440, 280, 431, 285, 426, 286, 422],
        capitol: [235, 565],
        name: 'Tamblair',

    },
    'kinforth': {
        boundaries: [284, 415, 287, 408, 297, 403, 308, 400, 319, 398, 327, 401, 337, 399, 341, 394, 358, 391, 370, 393, 377, 394, 385, 401, 394, 401, 397, 396, 407, 396, 412, 394, 429, 396, 439, 401, 446, 409, 451, 419, 456, 424, 451, 429, 453, 439, 457, 447, 461, 457, 469, 463, 473, 472, 468, 476, 467, 483, 466, 491, 463, 499, 454, 502, 446, 505, 436, 506, 431, 509, 422, 503, 410, 508, 388, 509, 378, 505, 370, 503, 366, 499, 362, 504, 353, 496, 347, 496, 341, 503, 338, 508, 331, 509, 326, 513, 317, 513, 314, 511, 310, 510, 306, 508, 300, 508, 294, 510, 286, 503, 283, 505, 273, 505, 266, 500, 263, 491, 267, 476, 268, 467, 266, 458, 269, 451, 280, 432, 285, 426],
        capitol: [317, 476],
        name: 'Kinforth',

    },
    'oaxley': {
        boundaries: [317, 513, 325, 514, 331, 510, 338, 509, 342, 503, 347, 498, 350, 497, 360, 504, 363, 503, 365, 499, 373, 503, 381, 505, 388, 510, 400, 508, 409, 507, 418, 504, 426, 506, 433, 514, 441, 519, 448, 529, 452, 540, 459, 547, 457, 550, 450, 544, 446, 545, 442, 548, 439, 551, 436, 550, 435, 546, 436, 541, 433, 540, 427, 540, 422, 543, 420, 549, 418, 549, 417, 543, 412, 539, 407, 541, 404, 544, 402, 547, 398, 548, 393, 545, 390, 545, 385, 541, 379, 539, 373, 540, 370, 543, 365, 539, 362, 540, 357, 539, 357, 535, 354, 533, 356, 530, 357, 527, 355, 524, 352, 526, 349, 523, 348, 528, 350, 536, 353, 542, 350, 545, 347, 548, 344, 547, 341, 549, 339, 549, 336, 545, 335, 540, 333, 536, 329, 531, 330, 527, 326, 527, 325, 521, 323, 519, 322, 521, 319, 527, 317, 524, 316, 521],
        capitol: [348, 541],
        name: 'Oaxley',

    },
    'utentana': {
        boundaries: [455, 422, 451, 428, 452, 441, 459, 449, 461, 458, 467, 462, 473, 465, 475, 472, 470, 474, 466, 481, 469, 488, 462, 499, 457, 503, 449, 503, 444, 505, 432, 508, 432, 515, 441, 519, 447, 526, 452, 541, 458, 545, 459, 551, 463, 550, 463, 559, 469, 563, 475, 562, 474, 555, 480, 558, 490, 556, 494, 560, 497, 566, 495, 571, 500, 576, 507, 570, 513, 568, 519, 569, 522, 563, 521, 556, 524, 551, 525, 547, 523, 542, 533, 538, 536, 543, 539, 541, 550, 546, 553, 536, 557, 536, 559, 526, 558, 519, 549, 516, 545, 514, 552, 509, 548, 504, 537, 501, 530, 497, 523, 497, 524, 491, 531, 484, 528, 473, 525, 465, 523, 457, 518, 444, 511, 438, 513, 433, 505, 426, 493, 426, 488, 434, 483, 435, 484, 442, 473, 439, 471, 433, 460, 429],
        capitol: [549, 535],
        name: 'Utentana',

    },
    'cusichaca': {
        boundaries: [267, 657, 262, 665, 261, 673, 255, 679, 251, 689, 254, 697, 259, 698, 263, 703, 264, 709, 271, 712, 271, 722, 276, 722, 279, 728, 276, 734, 281, 737, 281, 742, 289, 745, 291, 751, 298, 757, 306, 756, 311, 758, 311, 765, 317, 769, 326, 772, 319, 776, 316, 779, 310, 783, 302, 783, 302, 788, 307, 792, 303, 797, 299, 803, 300, 813, 305, 818, 305, 825, 312, 828, 316, 834, 309, 844, 308, 843, 302, 835, 295, 837, 285, 831, 281, 833, 276, 831, 266, 840, 256, 843, 249, 845, 239, 842, 229, 843, 219, 847, 215, 840, 211, 834, 212, 826, 209, 822, 209, 811, 214, 807, 210, 802, 206, 798, 196, 798, 191, 800, 184, 798, 176, 799, 169, 796, 164, 792, 163, 785, 159, 776, 163, 771, 164, 763, 160, 758, 161, 749, 162, 739, 161, 733, 161, 725, 162, 720, 159, 712, 157, 703, 162, 696, 168, 694, 174, 693, 180, 690, 186, 694, 197, 688, 197, 680, 206, 674, 210, 678, 215, 676, 219, 672, 224, 669, 228, 663, 230, 659, 229, 655, 237, 654, 241, 652, 247, 655, 255, 653, 263, 652],
        capitol: [235, 671],
        name: 'Cusichaca',
    },
    'hongshiCoast': {
        boundaries: [325, 771, 330, 772, 333, 773, 339, 771, 343, 775, 349, 772, 358, 773, 364, 774, 374, 771, 382, 765, 386, 767, 397, 770, 405, 771, 400, 766, 404, 763, 400, 759, 408, 759, 410, 764, 416, 761, 425, 767, 439, 772, 460, 776, 468, 780, 479, 777, 488, 779, 494, 773, 499, 774, 503, 772, 507, 773, 509, 769, 516, 770, 522, 768, 515, 762, 526, 768, 528, 779, 529, 787, 530, 795, 528, 804, 534, 806, 540, 813, 536, 819, 528, 825, 514, 826, 504, 829, 495, 837, 486, 845, 471, 851, 449, 852, 446, 849, 439, 850, 437, 847, 429, 847, 407, 839, 396, 835, 371, 835, 363, 837, 353, 842, 343, 847, 332, 852, 322, 851, 311, 843, 314, 835, 314, 828, 307, 827, 306, 821, 306, 817, 300, 813, 299, 805, 301, 799, 306, 795, 306, 790, 301, 785, 304, 782, 310, 782, 314, 781, 317, 777, 321, 775],
        capitol: [419, 777],
        contested: {
            attacker: "yesha",
            attackerProgress: 17000,
            attackerGoal: 282000,
            defender: "anglea",
            defenderProgress: 234000,
            defenderGoal: 372000
        },
        name: 'Hongshi Coast',
    }
}
